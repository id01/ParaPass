/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class one_id0_ppass_backend_Crypto */

#ifndef _Included_one_id0_ppass_backend_Crypto
#define _Included_one_id0_ppass_backend_Crypto
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     one_id0_ppass_backend_Crypto
 * Method:    blake2b
 * Signature: ([BI)[B
 */
JNIEXPORT jbyteArray JNICALL Java_one_id0_ppass_backend_Crypto_blake2b
  (JNIEnv *, jobject, jbyteArray, jint);

/*
 * Class:     one_id0_ppass_backend_Crypto
 * Method:    generateRandomBytes
 * Signature: ([B)V
 */
JNIEXPORT void JNICALL Java_one_id0_ppass_backend_Crypto_generateRandomBytes
  (JNIEnv *, jobject, jbyteArray);

/*
 * Class:     one_id0_ppass_backend_Crypto
 * Method:    generateKey
 * Signature: (Ljava/lang/String;[B)[B
 */
JNIEXPORT jbyteArray JNICALL Java_one_id0_ppass_backend_Crypto_generateKey
  (JNIEnv *, jobject, jstring, jbyteArray);

/*
 * Class:     one_id0_ppass_backend_Crypto
 * Method:    returnMasterKeyLength
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_one_id0_ppass_backend_Crypto_returnMasterKeyLength
  (JNIEnv *, jobject);

/*
 * Class:     one_id0_ppass_backend_Crypto
 * Method:    encryptAccountPassword
 * Signature: ([BLjava/lang/String;Ljava/lang/String;)[B
 */
JNIEXPORT jbyteArray JNICALL Java_one_id0_ppass_backend_Crypto_encryptAccountPassword
  (JNIEnv *, jobject, jbyteArray, jstring, jstring);

/*
 * Class:     one_id0_ppass_backend_Crypto
 * Method:    decryptAccountPassword
 * Signature: ([B[B)[Ljava/lang/String;
 */
JNIEXPORT jobjectArray JNICALL Java_one_id0_ppass_backend_Crypto_decryptAccountPassword
  (JNIEnv *, jobject, jbyteArray, jbyteArray);

/*
 * Class:     one_id0_ppass_backend_Crypto
 * Method:    generateRandomPassword
 * Signature: ([BI)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_one_id0_ppass_backend_Crypto_generateRandomPassword
  (JNIEnv *, jobject, jbyteArray, jint);

/*
 * Class:     one_id0_ppass_backend_Crypto
 * Method:    encryptMiscData
 * Signature: ([B[B)[B
 */
JNIEXPORT jbyteArray JNICALL Java_one_id0_ppass_backend_Crypto_encryptMiscData
  (JNIEnv *, jobject, jbyteArray, jbyteArray);

/*
 * Class:     one_id0_ppass_backend_Crypto
 * Method:    decryptMiscData
 * Signature: ([B[B)[B
 */
JNIEXPORT jbyteArray JNICALL Java_one_id0_ppass_backend_Crypto_decryptMiscData
  (JNIEnv *, jobject, jbyteArray, jbyteArray);

#ifdef __cplusplus
}
#endif
#endif
